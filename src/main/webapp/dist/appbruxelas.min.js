var appbruxelas=angular.module("appbruxelas",["ngRoute","ui.bootstrap"]);appbruxelas.config(["$routeProvider","$httpProvider",function(a,b){a.when("/",{templateUrl:"home.html"}).when("/profile",{templateUrl:"talker/form-talker.html"})}]),appbruxelas.config(["$locationProvider",function(a){a.hashPrefix("")}]),appbruxelas.factory("ConnectionService",["$http",function(a){var b=function(b){return a.get("http/connections-by-user.json")};return{findByUser:b}}]),appbruxelas.factory("SessionService",["$http",function(a){var b=function(){return a.get("http/user-session.json")};return{getSession:b}}]),appbruxelas.factory("TalkerService",["$http",function(a){var b=function(){return a.get("/bruxelas/api/talker/countries")},c=function(){return a.get("/bruxelas/api/talker/languages")},d=function(b){return a.get("/bruxelas/api/talker/languagesyouspeak/"+b)},e=function(b){return a.post("/bruxelas/api/talker/languagelearn",b)},f=function(b){return a.post("/bruxelas/api/talker/languagelearn/delete/"+b.id)},g=function(b){return a.post("/bruxelas/api/talker",b)};return{findCountries:b,findLanguages:c,findLanguagesYouSpeakByTalkerId:d,addLanguageSpeak:e,removeLanguageSpeak:f,save:g}}]),appbruxelas.factory("VersionService",["$http",function(a){var b=function(b){return a.get("/bruxelas/api/version")};return{findActualVersion:b}}]),appbruxelas.controller("HomeController",["ConnectionService","VersionService",function(a,b){var c=this;c.init=function(){c.findConnectionsByUser(1),c.findActualVersion()},c.findConnectionsByUser=function(b){a.findByUser(b).then(function(a){c.connections=a.data},function(a){console.log(a)})},c.findActualVersion=function(){b.findActualVersion().then(function(a){c.version=a.data,console.log(c.version)},function(a){console.log(a)})},c.init()}]),appbruxelas.controller("SessionController",["SessionService",function(a){var b=this;b.init=function(){a.getSession().then(function(a){b.userLogged=a.data},function(a){alert(a.data)})},b.init()}]),appbruxelas.controller("TalkerCRUDController",["TalkerService","$filter",function(a,b){var c=this;c.openedBirthDate=!1,c.dateOptions={formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},c.open=function(){c.openedBirthDate=!c.openedBirthDate,console.log(c.openedBirthDate)},c.init=function(){c.findCountiresBorn(),c.findCountriesLiving(),c.findLanguages();var a={};a.id=4,c.findLanguagesYouSpeak(a)},c.findCountiresBorn=function(){a.findCountries().then(function(a){c.countriesBorn=a.data,console.log(c.countriesBorn)},function(a){console.log(a)})},c.findCountriesLiving=function(){a.findCountries().then(function(a){c.countriesLiving=a.data},function(a){console.log(a)})},c.findLanguages=function(){a.findLanguages().then(function(a){c.languages=a.data},function(a){console.log(a)})},c.findLanguagesYouSpeak=function(b){a.findLanguagesYouSpeakByTalkerId(b.id).then(function(a){c.languagesSpeak=a.data},function(a){console.log(a)})},c.languagesSpeak=[{}],c.saveLanguage=function(b){b.talker=c.talker,a.addLanguageSpeak(b).then(function(a){c.findLanguagesYouSpeak(c.talker)},function(a){alert(a.data)})},c.addLanguage=function(a){c.languagesSpeak.lenght>=7||c.languagesSpeak.push(new Object)},c.popLanguages=function(b,d){d.id?a.removeLanguageSpeak(d).then(function(a){c.findLanguagesYouSpeak(c.talker)},function(a){console.log(a.data)}):c.languagesSpeak.splice(b,1)},c.save=function(d){d.birthDate=b("date")(d.birthDate,"dd/MM/yyyy"),console.log(JSON.stringify(d)),a.save(d).then(function(a){c.talker=a.data,console.log(c.talker.birthDate),c.talker.birthDate=b("date")(c.talker.birthDate,"dd/MM/yyyy"),alert("Talker sucessfully saved"),c.addLanguage()},function(a){alert(a.data)})},c.init()}]);