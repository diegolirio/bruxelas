var appbruxelas=angular.module("appbruxelas",["ngRoute","ui.bootstrap"]);appbruxelas.config(["$routeProvider","$httpProvider",function(a,b){a.when("/",{templateUrl:"home.html"}).when("/profile",{templateUrl:"talker/form-talker.html"})}]),appbruxelas.config(["$locationProvider",function(a){a.hashPrefix("")}]),appbruxelas.factory("ConnectionService",["$http",function(a){var b=function(b){return a.get("http/connections-by-user.json")};return{findByUser:b}}]),appbruxelas.factory("SessionService",["$http",function(a){var b=function(){return a.get("http/user-session.json")};return{getSession:b}}]),appbruxelas.factory("TalkerService",["$http",function(a){var b=function(){return a.get("/bruxelas/api/talker/countries")},c=function(){return a.get("/bruxelas/api/talker/languages")},d=function(b){return a.get("/bruxelas/api/talker/languagesyouspeak/"+b)},e=function(b){return a.post("/bruxelas/api/talker/languagelearn",b)},f=function(b){return a.post("/bruxelas/api/talker",b)};return{findCountries:b,findLanguages:c,findLanguagesYouSpeakByTalkerId:d,addLanguageSpeak:e,save:f}}]),appbruxelas.factory("VersionService",["$http",function(a){var b=function(b){return a.get("/bruxelas/api/version")};return{findActualVersion:b}}]),appbruxelas.controller("HomeController",["ConnectionService","VersionService",function(a,b){var c=this;c.init=function(){c.findConnectionsByUser(1),c.findActualVersion()},c.findConnectionsByUser=function(b){a.findByUser(b).then(function(a){c.connections=a.data},function(a){console.log(a)})},c.findActualVersion=function(){b.findActualVersion().then(function(a){c.version=a.data,console.log(c.version)},function(a){console.log(a)})},c.init()}]),appbruxelas.controller("SessionController",["SessionService",function(a){var b=this;b.init=function(){a.getSession().then(function(a){b.userLogged=a.data},function(a){alert(a.data)})},b.init()}]),appbruxelas.controller("TalkerCRUDController",["TalkerService",function(a){var b=this;b.openedBirthDate=!0,b.dateOptions={formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},b.open=function(){b.openedBirthDate=!b.openedBirthDate,console.log(b.openedBirthDate)},b.init=function(){b.findCountiresBorn(),b.findCountriesLiving(),b.findLanguages();var a={};a.id=4,b.findLanguagesYouSpeak(a)},b.findCountiresBorn=function(){a.findCountries().then(function(a){b.countriesBorn=a.data,console.log(b.countriesBorn)},function(a){console.log(a)})},b.findCountriesLiving=function(){a.findCountries().then(function(a){b.countriesLiving=a.data},function(a){console.log(a)})},b.findLanguages=function(){a.findLanguages().then(function(a){b.languages=a.data},function(a){console.log(a)})},b.findLanguagesYouSpeak=function(c){a.findLanguagesYouSpeakByTalkerId(c.id).then(function(a){b.languagesSpeak=a.data,console.log(b.languagesSpeak),b.languagesSpeak.push(new Object)},function(a){console.log(a)})},b.languagesSpeak=[{}],b.addLanguage=function(c){b.languagesSpeak.lenght>=7||(c.talker=b.talker,console.log(c),a.addLanguageSpeak(c).then(function(a){b.findLanguagesYouSpeak(b.talker)},function(a){alert(a.data)}))},b.popLanguages=function(a){b.languagesSpeak.splice(a,1)},b.save=function(c){console.log(JSON.stringify(c)),a.save(c).then(function(a){b.talker=a.data,alert("Talker sucessfully saved")},function(a){alert(a.data)})},b.init()}]);